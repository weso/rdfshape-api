"use strict";(self.webpackChunkrdfshape_api_webdocs=self.webpackChunkrdfshape_api_webdocs||[]).push([[955],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=u(r),f=a,m=d["".concat(s,".").concat(f)]||d[f]||l[f]||i;return r?n.createElement(m,o(o({ref:t},c),{},{components:r})):n.createElement(m,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8234:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var n=r(2122),a=r(9756),i=(r(7294),r(3905)),o=["components"],p={id:"usage_examples",title:"Example API Requests"},s="Example API requests",u={unversionedId:"api-usage/usage_examples",id:"api-usage/usage_examples",isDocsHomePage:!1,title:"Example API Requests",description:"Data info",source:"@site/../rdfshape-docs/target/mdoc/api-usage/usage_examples.md",sourceDirName:"api-usage",slug:"/api-usage/usage_examples",permalink:"/rdfshape-api/docs/api-usage/usage_examples",version:"current",frontMatter:{id:"usage_examples",title:"Example API Requests"},sidebar:"docsSidebar",previous:{title:"API Tutorial",permalink:"/rdfshape-api/docs/api-usage/usage_tutorial"},next:{title:"Unit tests with Munit",permalink:"/rdfshape-api/docs/api-testing-auditing/testing-auditing_munit"}},c=[{value:"Data info",id:"data-info",children:[]},{value:"Validation",id:"validation",children:[]},{value:"Wikidata",id:"wikidata",children:[]},{value:"Convert RDF data to JSON representation",id:"convert-rdf-data-to-json-representation",children:[]}],l={toc:c};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"example-api-requests"},"Example API requests"),(0,i.kt)("h2",{id:"data-info"},"Data info"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"curl -i -X POST -H \"Content-type:multipart/form-data\" \\\n'https://api.rdfshape.weso.es/api/data/info' \\\n--form-string 'data=@prefix :      <http://example.org/> . @prefix foaf:  <http://xmlns.com/foaf/0.1/> . :alice  a       foaf:Person .' \\\n--form-string 'dataSource=byText' \\\n--form-string 'dataFormat=turtle' \\\n--form-string 'dataInference=None'\n")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"pending-examples"},"Pending examples"),(0,i.kt)("h2",{id:"validation"},"Validation"),(0,i.kt)("h2",{id:"wikidata"},"Wikidata"),(0,i.kt)("h2",{id:"convert-rdf-data-to-json-representation"},"Convert RDF data to JSON representation"),(0,i.kt)("p",null,"The JSON representation follows the format used by\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/plotly/react-cytoscapejs"},"Cytoscape component"),"."))}d.isMDXComponent=!0}}]);